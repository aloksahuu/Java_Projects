package com.aurionpro.Solution.test;

import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

import com.aurionpro.Solution.model.Builder;
import com.aurionpro.Solution.model.Guitar;
import com.aurionpro.Solution.model.GuitarSpec;
import com.aurionpro.Solution.model.Inventory;
import com.aurionpro.Solution.model.Type;
import com.aurionpro.Solution.model.Wood;

public class FindGuitarTester {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		Inventory inventory = new Inventory();
		initializeInventory(inventory);

		System.out.println("=== Welcome to Rick's Guitar Finder ===");

		try {
			// Get user preferences
			System.out.print("Enter builder (FENDER/GIBSON/MARTIN/ANY): ");
			Builder builder = Builder.valueOf(scanner.next().toUpperCase());

			scanner.nextLine(); // Consume leftover newline

			System.out.print("Enter model name (e.g., Stratocastor): ");
			String model = scanner.nextLine().trim();

			System.out.print("Enter type (ACOUSTIC/ELECTRIC): ");
			Type type = Type.valueOf(scanner.next().toUpperCase());

			System.out.print("Enter number of strings (e.g., 6 or 12): ");
			int numStrings = scanner.nextInt();

			System.out.print("Enter back wood (e.g., ALDER, MAHOGANY): ");
			Wood backWood = Wood.valueOf(scanner.next().toUpperCase());

			System.out.print("Enter top wood (e.g., ALDER, MAHOGANY): ");
			Wood topWood = Wood.valueOf(scanner.next().toUpperCase());

			// Search based on input
			GuitarSpec userSpec = new GuitarSpec(builder, model, type, numStrings, backWood, topWood);
			List<Guitar> matches = inventory.search(userSpec);

			System.out.println("\n=== Search Results ===");
			if (!matches.isEmpty()) {
				for (Guitar guitar : matches) {
					GuitarSpec spec = guitar.getSpec();
					System.out.println("Serial No.: " + guitar.getSerialNumber());
					System.out.println("→ " + spec.getBuilder() + " " + spec.getModel() + " " + spec.getType());
					System.out.println("→ Strings: " + spec.getNumString());
					System.out.println("→ Back Wood: " + spec.getBackWood());
					System.out.println("→ Top Wood: " + spec.getTopWood());
					System.out.println("→ Price: ₹" + guitar.getPrice());
					System.out.println("---------------------------");
				}
			} else {
				System.out.println("Sorry, we have no guitars that match your preferences.");
			}

		} catch (IllegalArgumentException e) {
			System.out.println("⚠️ Invalid input. Please enter correct values as instructed.");
		} catch (InputMismatchException e) {
			System.out.println("⚠️ Please enter valid numbers where required.");
		} catch (Exception e) {
			System.out.println("⚠️ Unexpected error: " + e.getMessage());
		} finally {
			scanner.close();
		}
	}

	private static void initializeInventory(Inventory inventory) {
		inventory.addGuitar("11277", 14999.95, Builder.FENDER, "Stratocastor", Type.ELECTRIC, 12, Wood.ALDER, Wood.ALDER);
		inventory.addGuitar("V95693", 15499.95, Builder.FENDER, "Stratocastor", Type.ELECTRIC, 12, Wood.ALDER, Wood.ALDER);
		inventory.addGuitar("70108276", 22999.95, Builder.GIBSON, "SG", Type.ELECTRIC, 10, Wood.MAHOGANY, Wood.MAHOGANY);
		inventory.addGuitar("LPC101", 18999.00, Builder.GIBSON, "Les Paul", Type.ELECTRIC, 6, Wood.MAHOGANY, Wood.MAPLE);
		inventory.addGuitar("M12345", 11999.00, Builder.MARTIN, "D-28", Type.ACOUSTIC, 6, Wood.BRAZILIAN_ROSEWOOD, Wood.ADIRONDACK);
		inventory.addGuitar("X00012", 9999.00, Builder.ANY, "Starter", Type.ACOUSTIC, 6, Wood.MAPLE, Wood.MAPLE);
	}
}
