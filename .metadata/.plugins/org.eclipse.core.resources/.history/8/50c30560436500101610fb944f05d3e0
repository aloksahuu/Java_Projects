package com.aurionpro.Solution.test;

import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

import com.aurionpro.Solution.model.Builder;
import com.aurionpro.Solution.model.Guitar;
import com.aurionpro.Solution.model.GuitarSpec;
import com.aurionpro.Solution.model.Inventory;
import com.aurionpro.Solution.model.Type;
import com.aurionpro.Solution.model.Wood;

public class FindGuitarTester {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		Inventory inventory = new Inventory();
		initializeInventory(inventory);

		System.out.println("=== Welcome to Rick's Guitar Finder ===");

		boolean continueSearch = true;

		while (continueSearch) {
			try {
				// Get user preferences
				System.out.print("\nEnter builder (FENDER/GIBSON/MARTIN/COLLINGS/OLSON/RYAN/PRS/ANY): ");
				Builder builder = Builder.valueOf(scanner.next().toUpperCase());

				scanner.nextLine(); // Consume leftover newline

				System.out.print("Enter model name (e.g., Stratocastor): ");
				String model = scanner.nextLine().trim();

				System.out.print("Enter type (ACOUSTIC/ELECTRIC): ");
				Type type = Type.valueOf(scanner.next().toUpperCase());

				System.out.print("Enter number of strings (e.g., 6 or 12): ");
				int numStrings = scanner.nextInt();

				System.out.print("Enter back wood (e.g., ALDER, MAHOGANY): ");
				Wood backWood = Wood.valueOf(scanner.next().toUpperCase());

				System.out.print("Enter top wood (e.g., ALDER, MAHOGANY): ");
				Wood topWood = Wood.valueOf(scanner.next().toUpperCase());

				// Search based on input
				GuitarSpec userSpec = new GuitarSpec(builder, model, type, numStrings, backWood, topWood);
				List<Guitar> matches = inventory.search(userSpec);

				System.out.println("\n=== Search Results ===");
				if (!matches.isEmpty()) {
					for (Guitar guitar : matches) {
						GuitarSpec spec = guitar.getSpec();
						System.out.println("Serial No.: " + guitar.getSerialNumber());
						System.out.println("→ " + spec.getBuilder() + " " + spec.getModel() + " " + spec.getType());
						System.out.println("→ Strings: " + spec.getNumString());
						System.out.println("→ Back Wood: " + spec.getBackWood());
						System.out.println("→ Top Wood: " + spec.getTopWood());
						System.out.println("→ Price: ₹" + guitar.getPrice());
						System.out.println("---------------------------");
					}
				} else {
					System.out.println("Sorry, we have no guitars that match your preferences.");
				}

			} catch (IllegalArgumentException e) {
				System.out.println("Invalid input. Please enter correct values as instructed.");
				scanner.nextLine(); // Clear input buffer
			} catch (InputMismatchException e) {
				System.out.println("Please enter valid numbers where required.");
				scanner.nextLine(); // Clear invalid input
			} catch (Exception e) {
				System.out.println("Unexpected error: " + e.getMessage());
				scanner.nextLine(); // Clear any stuck input
			}

			// Ask user if they want to search again
			System.out.print("\n Do you want to search more guitars? (yes/no): ");
			String response = scanner.next().trim().toLowerCase();
			if (!response.equals("yes") && !response.equals("y")) {
				continueSearch = false;
				System.out.println("Thank you for using Rick's Guitar Finder!");
			}
		}

		scanner.close();
	}

	private static void initializeInventory(Inventory inventory) {
		// FENDER
		inventory.addGuitar("F001", 14999.95, Builder.FENDER, "Stratocastor", Type.ELECTRIC, 12, Wood.ALDER,
				Wood.ALDER);
		inventory.addGuitar("F002", 13999.95, Builder.FENDER, "Stratocastor", Type.ELECTRIC, 6, Wood.MAPLE, Wood.ALDER);
		inventory.addGuitar("F003", 12999.95, Builder.FENDER, "AcoustiFender", Type.ACOUSTIC, 12, Wood.ALDER,
				Wood.ALDER);
		inventory.addGuitar("F004", 10999.95, Builder.FENDER, "FenderSix", Type.ACOUSTIC, 6, Wood.MAHOGANY, Wood.MAPLE);

		// GIBSON
		inventory.addGuitar("G001", 15499.95, Builder.GIBSON, "Les Paul", Type.ELECTRIC, 6, Wood.MAHOGANY, Wood.MAPLE);
		inventory.addGuitar("G002", 15999.95, Builder.GIBSON, "SG", Type.ELECTRIC, 10, Wood.MAHOGANY, Wood.MAHOGANY);
		inventory.addGuitar("G003", 12999.95, Builder.GIBSON, "GibAcoustic", Type.ACOUSTIC, 12, Wood.ALDER, Wood.ALDER);
		inventory.addGuitar("G004", 11999.95, Builder.GIBSON, "GibSix", Type.ACOUSTIC, 6, Wood.MAPLE, Wood.MAPLE);

		// MARTIN
		inventory.addGuitar("M001", 11999.00, Builder.MARTIN, "D-28", Type.ACOUSTIC, 6, Wood.BRAZILIAN_ROSEWOOD,
				Wood.ADIRONDACK);
		inventory.addGuitar("M002", 12999.00, Builder.MARTIN, "OMJM", Type.ACOUSTIC, 12, Wood.INDIAN_ROSEWOOD,
				Wood.SITKA);
		inventory.addGuitar("M003", 14999.00, Builder.MARTIN, "X-Series", Type.ELECTRIC, 6, Wood.CEDAR, Wood.CEDAR);

		// ANY brand
		inventory.addGuitar("A001", 9999.00, Builder.ANY, "Starter", Type.ACOUSTIC, 6, Wood.MAPLE, Wood.MAPLE);
		inventory.addGuitar("A002", 8999.00, Builder.ANY, "SimpleSix", Type.ACOUSTIC, 6, Wood.ALDER, Wood.ALDER);
		inventory.addGuitar("A003", 10999.00, Builder.ANY, "Any12", Type.ACOUSTIC, 12, Wood.ALDER, Wood.ALDER);
		inventory.addGuitar("A004", 8999.00, Builder.ANY, "AnyElec", Type.ELECTRIC, 12, Wood.ALDER, Wood.ALDER);

		// COLLINGS
		inventory.addGuitar("C001", 13499.95, Builder.COLLINGS, "C10", Type.ACOUSTIC, 6, Wood.CEDAR, Wood.CEDAR);

		// OLSON
		inventory.addGuitar("O001", 19999.95, Builder.OLSON, "SJ", Type.ACOUSTIC, 6, Wood.COCOBOLO, Wood.MAPLE);

		// RYAN
		inventory.addGuitar("R001", 17499.00, Builder.RYAN, "Nightingale", Type.ACOUSTIC, 12, Wood.INDIAN_ROSEWOOD,
				Wood.SITKA);

		// PRS ELECTRIC
		inventory.addGuitar("P001", 18999.00, Builder.PRS, "Custom 24", Type.ELECTRIC, 6, Wood.MAPLE, Wood.COCOBOLO);
	}

}
